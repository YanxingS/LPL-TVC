//
//  main.cpp
//  C++ test
//  TVC search algo v1, works only for a lookup table of 1 deg accuracy
//  Created by Yanxing Su on 10/3/24.
//
// this search algorithm takes a user defined input and converts to a set of y-z intercept
// and finds the corresponding actuator 1 and 2 length
#include <algorithm>
#include <iostream>
#include <time.h>
#include <stdio.h>
#include <vector>
#include <cmath>

using namespace std;

double time1, timedif;

//const double desired_TV[3*12] = {0.0, 0.0, 100.0, 0.0, 100.0, 0.0, 70.71, 70.71, 0.0, 100.0, 0.0, 0.0, 0.0, 100.0, 0.0, 50.0, 50.0, 86.6, 86.6, 50.0, 50.0, 0.0, 0.0, 100.0, 0.0, 0.0, 100.0, 70.71, 0.0, 70.71, 100.0, 0.0, 0.0, 0.0, 100.0, 50.0};
//-----------------------------------------------------------------------------------------------
    //declaration normalization function

void normalization(double *arr){
    double mag = sqrt(pow(arr[0],2)+pow(arr[1],2)+pow(arr[2],2));
    arr[0] /= mag;
    arr[1] /= mag;
    arr[2] /= mag;
};

//——————————————————————————————————————————————————————————————————————————————
//  The following defines our thrust vector list
//——————————————————————————————————————————————————————————————————————————————

const double TV_list_x[100] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

const double TV_list_y[100] = {0,0.000404717528451959,0.00159785862007166,0.00351720692513361,0.00606176731605552,0.00909571588203184,0.0124537368239719,0.0159475606992703,0.0193734759686243,0.0225205507335720,0.0251792750881833,0.0271503175368381,0.0282530820499385,0.0283337558210603,0.0272725516055158,0.0249898722874456,0.0214511583492005,0.0166702202145170,0.0107109057493003,0.00368700704344229,-0.00423963170932802,-0.0128627836778495,-0.0219372047559011,-0.0311855552316835,-0.0403066836686090,-0.0489850298073893,-0.0569008612488453,-0.0637410250990204,-0.0692098718344776,-0.0730399952711399,-0.0750024302730005,-0.0749159589580577,-0.0726551965397792,-0.0681571591258882,-0.0614260569856627,-0.0525361068767568,-0.0416322145885405,-0.0289284422573181,-0.0147042423832099,0.000701490176183493,0.0168984277392711,0.0334546933918994,0.0499083685300188,0.0657803179342114,0.0805879777981020,0.0938597137405963,0.105149328550641,0.114050284275051,0.120209200949941,0.123338205106803};

const double TV_list_z[100] = {0,0.00248745183901199,0.00478034512846345,0.00669254598855739,0.00805446359938680,0.00872056625594710,0.00857601915645595,0.00754219737714865,0.00558086519856186,0.00269685778732941,-0.00106084822553995,-0.00559973410859368,-0.0107860102211178,-0.0164485034612318,-0.0223840492997936,-0.0283642238063417,-0.0341432030624407,-0.0394664958483772,-0.0440802618765303,-0.0477409032855201,-0.0502246024838964,-0.0513364753158206,-0.0509190151637874,-0.0488595209192618,-0.0450962293199902,-0.0396229092261587,-0.0324917209348189,-0.0238141962858771,-0.0137602535289013,-0.00255522294194138,0.00952507687423227,0.0221611082393146,0.0349980635936932,0.0476557713171356,0.0597397829707808,0.0708533225230366,0.0806097429889789,0.0886451111381507,0.0946305274515519,0.0982837869483433,0.0993799971157437,0.0977607918549511,0.0933418146269498,0.0861181890116108,0.0761677495100255,0.0636518681441879,0.0488137814927507,0.0319743962800233,0.0135256273771890,-0.00607860215331593};

//-----------------------------------------------------------------------------------------------
    //declaration of y and z intercept table as well as their corresponding actuator 1 and 2 length
const double y_int[625] = {-0.217305201700196,-0.216534917995529,-0.215835589250674,-0.215206105948304,-0.214645476694142,-0.214152824348297,-0.213727382634760,-0.213368493204374,-0.213075603130105,-0.212848262816762,-0.212686124310365,-0.212588939995281,-0.212556561670022,-0.212588939995281,-0.212686124310365,-0.212848262816762,-0.213075603130105,-0.213368493204374,-0.213727382634760,-0.214152824348297,-0.214645476694142,-0.215206105948304,-0.215835589250674,-0.216534917995529,-0.217305201700196,-0.198722880873903,-0.198018466089149,-0.197378938725017,-0.196803284141831,-0.196290595721961,-0.195840071331980,-0.195451010222092,-0.195122810340250,-0.194854966041620,-0.194647066177038,-0.194498792546957,-0.194409918709984,-0.194380309137719,-0.194409918709984,-0.194498792546957,-0.194647066177038,-0.194854966041620,-0.195122810340250,-0.195451010222092,-0.195840071331980,-0.196290595721961,-0.196803284141831,-0.197378938725017,-0.198018466089149,-0.198722880873903,-0.180266230348247,-0.179627239018759,-0.179047108604840,-0.178524918702815,-0.178059846898366,-0.177651165557271,-0.177298239012798,-0.177000521129280,-0.176757553224316,-0.176568962334766,-0.176434459814284,-0.176353840252524,-0.176326980708465,-0.176353840252524,-0.176434459814284,-0.176568962334766,-0.176757553224316,-0.177000521129280,-0.177298239012798,-0.177651165557271,-0.178059846898366,-0.178524918702815,-0.179047108604840,-0.179627239018759,-0.180266230348247,-0.161922842938751,-0.161348873579743,-0.160827775614164,-0.160358722296044,-0.159940974897646,-0.159573879826771,-0.159256866100355,-0.158989443155970,-0.158771198985452,-0.158601798577349,-0.158480982657158,-0.158408566716516,-0.158384440324536,-0.158408566716516,-0.158480982657158,-0.158601798577349,-0.158771198985452,-0.158989443155970,-0.159256866100355,-0.159573879826771,-0.159940974897646,-0.160358722296044,-0.160827775614164,-0.161348873579743,-0.161922842938751,-0.143680600552471,-0.143171294634267,-0.142708903613444,-0.142292693885308,-0.141922009947256,-0.141596271840847,-0.141314972910022,-0.141077677859161,-0.140884021096978,-0.140733705354440,-0.140626500566936,-0.140562243012831,-0.140540834702391,-0.140562243012831,-0.140626500566936,-0.140733705354440,-0.140884021096978,-0.141077677859161,-0.141314972910022,-0.141596271840847,-0.141922009947256,-0.142292693885308,-0.142708903613444,-0.143171294634267,-0.143680600552471,-0.125527641033717,-0.125082682074534,-0.124678710669515,-0.124315085899384,-0.123991235079345,-0.123706651524327,-0.123460892590441,-0.123253577978385,-0.123084388286571,-0.122953063803666,-0.122859403531986,-0.122803264434889,-0.122784560902905,-0.122803264434889,-0.122859403531986,-0.122953063803666,-0.123084388286571,-0.123253577978385,-0.123460892590441,-0.123706651524327,-0.123991235079345,-0.124315085899384,-0.124678710669515,-0.125082682074534,-0.125527641033717,-0.107452326404346,-0.107071439175645,-0.106725637510668,-0.106414372779115,-0.106137154759764,-0.105893549727507,-0.105683178776829,-0.105505716369509,-0.105360889096095,-0.105248474642308,-0.105168300953065,-0.105120245588241,-0.105104235265676,-0.105120245588241,-0.105168300953065,-0.105248474642308,-0.105360889096095,-0.105505716369509,-0.105683178776829,-0.105893549727507,-0.106137154759764,-0.106414372779115,-0.106725637510668,-0.107071439175645,-0.107452326404346,-0.0894432123130395,-0.0891261621531781,-0.0888383171825410,-0.0885792207217989,-0.0883484647112820,-0.0881456881186316,-0.0879705755432632,-0.0878228560074776,-0.0877023019255123,-0.0876087282431773,-0.0875419917419878,-0.0875019905029030,-0.0874886635259240,-0.0875019905029030,-0.0875419917419878,-0.0876087282431773,-0.0877023019255123,-0.0878228560074776,-0.0879705755432632,-0.0881456881186316,-0.0883484647112820,-0.0885792207217989,-0.0888383171825410,-0.0891261621531781,-0.0894432123130395,-0.0714890185193435,-0.0712356107518477,-0.0710055457317705,-0.0707984584503403,-0.0706140227588811,-0.0704519500960999,-0.0703119883726807,-0.0701939210050589,-0.0700975660914178,-0.0700227757240285,-0.0699694354330654,-0.0699374637579905,-0.0699268119435104,-0.0699374637579905,-0.0699694354330654,-0.0700227757240285,-0.0700975660914178,-0.0701939210050589,-0.0703119883726807,-0.0704519500960999,-0.0706140227588811,-0.0707984584503403,-0.0710055457317705,-0.0712356107518477,-0.0714890185193435,-0.0535786002477795,-0.0533886797011621,-0.0532162537538345,-0.0530610488440742,-0.0529228205344850,-0.0528013525581427,-0.0526964559826353,-0.0526079684859100,-0.0525357537387110,-0.0524797008892002,-0.0524397241461171,-0.0524157624575450,-0.0524077792830412,-0.0524157624575450,-0.0524397241461171,-0.0524797008892002,-0.0525357537387110,-0.0526079684859100,-0.0526964559826353,-0.0528013525581427,-0.0529228205344850,-0.0530610488440742,-0.0532162537538345,-0.0533886797011621,-0.0535786002477795,-0.0357009202553380,-0.0355743708819261,-0.0354594786494485,-0.0353560612760762,-0.0352639558863338,-0.0351830183755195,-0.0351131228526814,-0.0350541611580949,-0.0350060424517627,-0.0349686928700041,-0.0349420552477019,-0.0349260889042562,-0.0349207694917478,-0.0349260889042562,-0.0349420552477019,-0.0349686928700041,-0.0350060424517627,-0.0350541611580949,-0.0351131228526814,-0.0351830183755195,-0.0352639558863338,-0.0353560612760762,-0.0354594786494485,-0.0355743708819261,-0.0357009202553380,-0.0178450214621217,-0.0177817660539025,-0.0177243374403057,-0.0176726445081856,-0.0176266058446169,-0.0175861494192014,-0.0175512123056416,-0.0175217404405520,-0.0174976884177726,-0.0174790193167153,-0.0174657045635302,-0.0174577238241144,-0.0174550649282176,-0.0174577238241144,-0.0174657045635302,-0.0174790193167153,-0.0174976884177726,-0.0175217404405520,-0.0175512123056416,-0.0175861494192014,-0.0176266058446169,-0.0176726445081856,-0.0177243374403057,-0.0177817660539025,-0.0178450214621217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0178450214621217,0.0177817660539025,0.0177243374403057,0.0176726445081856,0.0176266058446169,0.0175861494192014,0.0175512123056416,0.0175217404405520,0.0174976884177726,0.0174790193167153,0.0174657045635302,0.0174577238241144,0.0174550649282176,0.0174577238241144,0.0174657045635302,0.0174790193167153,0.0174976884177726,0.0175217404405520,0.0175512123056416,0.0175861494192014,0.0176266058446169,0.0176726445081856,0.0177243374403057,0.0177817660539025,0.0178450214621217,0.0357009202553380,0.0355743708819261,0.0354594786494485,0.0353560612760762,0.0352639558863338,0.0351830183755195,0.0351131228526814,0.0350541611580949,0.0350060424517627,0.0349686928700041,0.0349420552477019,0.0349260889042562,0.0349207694917478,0.0349260889042562,0.0349420552477019,0.0349686928700041,0.0350060424517627,0.0350541611580949,0.0351131228526814,0.0351830183755195,0.0352639558863338,0.0353560612760762,0.0354594786494485,0.0355743708819261,0.0357009202553380,0.0535786002477795,0.0533886797011621,0.0532162537538345,0.0530610488440742,0.0529228205344850,0.0528013525581427,0.0526964559826353,0.0526079684859100,0.0525357537387110,0.0524797008892002,0.0524397241461171,0.0524157624575450,0.0524077792830412,0.0524157624575450,0.0524397241461171,0.0524797008892002,0.0525357537387110,0.0526079684859100,0.0526964559826353,0.0528013525581427,0.0529228205344850,0.0530610488440742,0.0532162537538345,0.0533886797011621,0.0535786002477795,0.0714890185193435,0.0712356107518477,0.0710055457317705,0.0707984584503403,0.0706140227588811,0.0704519500960999,0.0703119883726807,0.0701939210050589,0.0700975660914178,0.0700227757240285,0.0699694354330654,0.0699374637579905,0.0699268119435104,0.0699374637579905,0.0699694354330654,0.0700227757240285,0.0700975660914178,0.0701939210050589,0.0703119883726807,0.0704519500960999,0.0706140227588811,0.0707984584503403,0.0710055457317705,0.0712356107518477,0.0714890185193435,0.0894432123130395,0.0891261621531781,0.0888383171825410,0.0885792207217989,0.0883484647112820,0.0881456881186316,0.0879705755432632,0.0878228560074776,0.0877023019255123,0.0876087282431773,0.0875419917419878,0.0875019905029030,0.0874886635259240,0.0875019905029030,0.0875419917419878,0.0876087282431773,0.0877023019255123,0.0878228560074776,0.0879705755432632,0.0881456881186316,0.0883484647112820,0.0885792207217989,0.0888383171825410,0.0891261621531781,0.0894432123130395,0.107452326404346,0.107071439175645,0.106725637510668,0.106414372779115,0.106137154759764,0.105893549727507,0.105683178776829,0.105505716369509,0.105360889096095,0.105248474642308,0.105168300953065,0.105120245588241,0.105104235265676,0.105120245588241,0.105168300953065,0.105248474642308,0.105360889096095,0.105505716369509,0.105683178776829,0.105893549727507,0.106137154759764,0.106414372779115,0.106725637510668,0.107071439175645,0.107452326404346,0.125527641033717,0.125082682074534,0.124678710669515,0.124315085899384,0.123991235079345,0.123706651524327,0.123460892590441,0.123253577978385,0.123084388286571,0.122953063803666,0.122859403531986,0.122803264434889,0.122784560902905,0.122803264434889,0.122859403531986,0.122953063803666,0.123084388286571,0.123253577978385,0.123460892590441,0.123706651524327,0.123991235079345,0.124315085899384,0.124678710669515,0.125082682074534,0.125527641033717,0.143680600552471,0.143171294634267,0.142708903613444,0.142292693885308,0.141922009947256,0.141596271840847,0.141314972910022,0.141077677859161,0.140884021096978,0.140733705354440,0.140626500566936,0.140562243012831,0.140540834702391,0.140562243012831,0.140626500566936,0.140733705354440,0.140884021096978,0.141077677859161,0.141314972910022,0.141596271840847,0.141922009947256,0.142292693885308,0.142708903613444,0.143171294634267,0.143680600552471,0.161922842938751,0.161348873579743,0.160827775614164,0.160358722296044,0.159940974897646,0.159573879826771,0.159256866100355,0.158989443155970,0.158771198985452,0.158601798577349,0.158480982657158,0.158408566716516,0.158384440324536,0.158408566716516,0.158480982657158,0.158601798577349,0.158771198985452,0.158989443155970,0.159256866100355,0.159573879826771,0.159940974897646,0.160358722296044,0.160827775614164,0.161348873579743,0.161922842938751,0.180266230348247,0.179627239018759,0.179047108604840,0.178524918702815,0.178059846898366,0.177651165557271,0.177298239012798,0.177000521129280,0.176757553224316,0.176568962334766,0.176434459814284,0.176353840252524,0.176326980708465,0.176353840252524,0.176434459814284,0.176568962334766,0.176757553224316,0.177000521129280,0.177298239012798,0.177651165557271,0.178059846898366,0.178524918702815,0.179047108604840,0.179627239018759,0.180266230348247,0.198722880873903,0.198018466089149,0.197378938725017,0.196803284141831,0.196290595721961,0.195840071331980,0.195451010222092,0.195122810340250,0.194854966041620,0.194647066177038,0.194498792546957,0.194409918709984,0.194380309137719,0.194409918709984,0.194498792546957,0.194647066177038,0.194854966041620,0.195122810340250,0.195451010222092,0.195840071331980,0.196290595721961,0.196803284141831,0.197378938725017,0.198018466089149,0.198722880873903,0.217305201700196,0.216534917995529,0.215835589250674,0.215206105948304,0.214645476694142,0.214152824348297,0.213727382634760,0.213368493204374,0.213075603130105,0.212848262816762,0.212686124310365,0.212588939995281,0.212556561670022,0.212588939995281,0.212686124310365,0.212848262816762,0.213075603130105,0.213368493204374,0.213727382634760,0.214152824348297,0.214645476694142,0.215206105948304,0.215835589250674,0.216534917995529,0.217305201700196};

const double z_int[625] =  {0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137718,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137718,-0.212556561670022,0.212556561670022,0.194380309137718,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137718,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137718,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137718,-0.212556561670022,0.212556561670022,0.194380309137718,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137718,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917478,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917478,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022,0.212556561670022,0.194380309137719,0.176326980708465,0.158384440324536,0.140540834702391,0.122784560902905,0.105104235265676,0.0874886635259240,0.0699268119435104,0.0524077792830412,0.0349207694917477,0.0174550649282176,0,-0.0174550649282176,-0.0349207694917477,-0.0524077792830412,-0.0699268119435104,-0.0874886635259240,-0.105104235265676,-0.122784560902905,-0.140540834702391,-0.158384440324536,-0.176326980708465,-0.194380309137719,-0.212556561670022};

const double act1_length[625] = {17.4502113909422,17.3929101010481,17.3343590837835,17.2745635587076,17.2135288670030,17.1512604718657,17.0877639589217,17.0230450366727,16.9571095369738,16.8899634155433,16.8216127525069,16.7520637529807,16.6813227476911,16.6093961936388,16.5362906748053,16.4620129029071,16.3865697181995,16.3099680903334,16.2322151192678,16.1533180362423,16.0732842048119,15.9921211219496,15.9098364192197,15.8264378640260,15.7419333609409,17.5364885432274,17.4791554064752,17.4205664900876,17.3607270184451,17.2996423381037,17.2373179181846,17.1737593507912,17.1089723514544,17.0429627596101,16.9757365391085,16.9072997787591,16.8376586929117,16.7668196220779,16.6947890335928,16.6215735223221,16.5471798114152,16.4716147531088,16.3948853295823,16.3169986538696,16.2379619708309,16.1577826581859,16.0764682276156,15.9940263259335,15.9104647363330,15.8257913797142,17.6215177006736,17.5641589886083,17.5055388397144,17.4456624856697,17.3845352809514,17.3221627032285,17.2585503537812,17.1937039579497,17.1276293656139,17.0603325517063,16.9918196167595,16.9220967874912,16.8511704174278,16.7790469875707,16.7057331071061,16.6312355141622,16.5555610766158,16.4787167929520,16.4007097931802,16.3215473398087,16.2412368288834,16.1597857910929,16.0772018929441,15.9934929380143,15.9086668682824,17.7052911277006,17.6479130825654,17.5892683343771,17.5293621245024,17.4681998178010,17.4057869030228,17.3421289932328,17.2772318262656,17.2111012652108,17.1437432989323,17.0751640426220,17.0053697383910,16.9343667559008,16.8621615930359,16.7887608766213,16.7141713631872,16.6383999397833,16.5614536248474,16.4833395691288,16.4040650566727,16.3236375058673,16.2420644705584,16.1593536412354,16.0755128462929,15.9905500533725,17.7878012265348,17.7304100618260,17.6717473148216,17.6118182388876,17.5506282116425,17.4881827353631,17.4244874374169,17.3595480707253,17.2933705142577,17.2259607735596,17.1573249813157,17.0874693979515,17.0164004122739,16.9441245421549,16.8706484352597,16.7959788698235,16.7201227554772,16.6430871341282,16.5648791808972,16.4855062051158,16.4049756513873,16.3232951007160,16.2404722717079,16.1565150218485,16.0714313488601,17.8690405363068,17.8116424372926,17.7529682598488,17.6930232715699,17.6318128651277,17.5693425586861,17.5056179963451,17.4406449486142,17.3744293129184,17.3069771141381,17.2382945051845,17.1683877676137,17.0972633122816,17.0249276800407,16.9513875424836,16.8766497027337,16.8007210962880,16.7236087919134,16.6453199926008,16.5658620365805,16.4852423984015,16.4034686900798,16.3205486623195,16.2364902058111,16.1513013526105,17.9490017322079,17.8916028564139,17.8329237853980,17.7729698031350,17.7117463195628,17.6492588710099,17.5855131206520,17.5205148589994,17.4542700044162,17.3867846036753,17.3180648325493,17.2481169964400,17.1769475310494,17.1045630030948,17.0309701110690,16.9561756860505,16.8801866925651,16.8030102295027,16.7246535310925,16.6451239679400,16.5644290481293,16.4825764183955,16.3995738653697,16.3154293169038,16.2301508434762,18.0276776247014,17.9702841023629,17.9116066436891,17.8516505511100,17.7904212539637,17.7279243089388,17.6641654005460,17.5991503416206,17.5328850738598,17.4653756683933,17.3966283263926,17.3266493797194,17.2554452916159,17.1830226574399,17.1093882054463,17.0345487976189,16.9585114305554,16.8812832364075,16.8028714838812,16.7232835792995,16.6425270677315,16.5606096341932,16.4775391049215,16.3933234487291,16.3079707784427,18.1050611587844,18.0476790932689,17.9890097224192,17.9290583691210,17.8678304841697,17.8053316467294,17.7415675648218,17.6765440758472,17.6102671471398,17.5427428765586,17.4739774931167,17.4039773576515,17.3327489635366,17.2602989374401,17.1866340401305,17.1117611673334,17.0356873506424,16.9584197584869,16.8799656971602,16.8003326119119,16.7195280881084,16.6375598524646,16.5544357743524,16.4701638671897,16.3847522899152,18.1811454132996,18.1237808814989,18.0651260440108,18.0051862461040,17.9439669620127,17.8814737954137,17.8177124799351,17.7526888796971,17.6864089898887,17.6188789373802,17.5501049813756,17.4800935141060,17.4088510615673,17.3363842843032,17.2626999782390,17.1878050755655,17.1117066456795,17.0344118961821,16.9559281739381,16.8762629662018,16.7954239018118,16.7134187524583,16.6302554340291,16.5459420080378,16.4604866831386,18.2559236002911,18.1985826529860,18.1399487649083,18.0800273055658,18.0188237745388,17.9563438019776,17.8925931491322,17.8275777089159,17.7613035065043,17.6937766999725,17.6250035809723,17.5549905754520,17.4837442444208,17.4112712847609,17.3375785300899,17.2626729516765,17.1865616594126,17.1092519028447,17.0307510722686,16.9510666998915,16.8702064610638,16.7881781755868,16.7049898090988,16.6206494745467,16.5351654337448,18.3293890644038,18.2720777266022,18.2134711749207,18.1535748048924,18.0923941432788,18.0299348485893,17.9662027116338,17.9012036561105,17.8349437392300,17.7674291523784,17.6986662218220,17.6286614094553,17.5574213135947,17.4849526698218,17.4112623518774,17.3363573726111,17.2602448849873,17.1829321831536,17.1044267035729,17.0247360262246,16.9438678758776,16.8618301234402,16.7786307873916,16.6942780352979,16.6087801854208,18.4015352823236,18.3442595535728,18.2856866966066,18.2258221347018,18.1646714235652,18.1022402518771,18.0385344418689,17.9735599499364,17.9073228672910,17.8398294206506,17.7710859729738,17.7010990242377,17.6298752122640,17.5574213135947,17.4837442444208,17.4088510615673,17.3327489635366,17.2554452916159,17.1769475310494,17.0972633122816,17.0164004122739,16.9343667559008,16.8511704174278,16.7668196220779,16.6813227476911,18.4723558622544,18.4151217169295,18.3565888847006,18.2967628182392,18.2356491038924,18.1732534622514,18.1095817487557,18.0446399543335,17.9784342060818,17.9109707679871,17.8422560416902,17.7722965672971,17.7010990242377,17.6286702321772,17.5550171519813,17.4801468867386,17.4040666828441,17.3267839311475,17.2483061681682,17.1686410773831,17.0877964905903,17.0057803893525,16.9226009065262,16.8382663278802,16.7527850938096,18.5418445434320,18.4846579310007,18.4261714255764,18.3663905108112,18.3053208053189,18.2429680632711,18.1793381750282,18.1144371678094,18.0482712064028,17.9808465939174,17.9121697725806,17.8422473245832,17.7710859729738,17.6986925826066,17.6250741611452,17.5502378601252,17.4741909760795,17.3969409517288,17.3184953772432,17.2388619915758,17.1580486838756,17.0760634949820,16.9929146190063,16.9086104050059,16.8231593587548,18.6099951956705,18.5528620409368,18.4944281367476,18.4346989992574,18.3736802809072,18.3113777710484,18.2477973966037,18.1829452227665,18.1168274537432,18.0494504335380,17.9808206467848,17.9109447196271,17.8398294206506,17.7674816618690,17.6939084997679,17.6191171364096,17.5431149206015,17.4659093491324,17.3875080680805,17.3079188741968,17.2271497163684,17.1452086971662,17.0621040744818,16.9778442632588,16.8924378373233,18.6768018189412,18.6197280222671,18.5613529664006,18.5016822014575,18.4407214152007,18.3784764336938,18.3149532219912,18.2501578848706,18.1840966676072,18.1167759567932,18.0482022812049,17.9783823127206,17.9073228672910,17.8350309059653,17.7615135359774,17.6867780118936,17.6108317368264,17.5336822637179,17.4553372966969,17.3758046925128,17.2950924620520,17.2132087719406,17.1301619462386,17.0459604682304,16.9606129823176,18.7422585429805,18.6852499804881,18.6269399929600,18.5673341658704,18.5064382237353,18.4442580307949,18.3807995917366,18.3160690524592,18.2500727008817,18.1828169677984,18.1143084277829,18.0445538001440,17.9735599499364,17.9013338890287,17.8278827772321,17.7532139234936,17.6773347871564,17.6002529792917,17.5219762641066,17.4425125604304,17.3618699432854,17.2800566455468,17.1970810596954,17.1129517396696,17.0276774028220,18.8063596269257,18.7494221506807,18.6911834246839,18.6316490711057,18.5708248525823,18.5087166729307,18.4453305779032,18.3806727559858,18.3147495392424,18.2475674042058,18.1791329728205,18.1094530134381,18.0385344418689,17.9663843224925,17.8930098694318,17.8184184477915,17.7426175749672,17.6656149220270,17.5874183151712,17.5080357372725,17.4274753295031,17.3457453930525,17.2628543909410,17.1788109499341,17.0936238625647,18.8690994589776,18.8122388971536,18.7540775992872,18.6946212255226,18.6338755779228,18.5718466012166,18.5085403835861,18.4439631575008,18.3781213005969,18.3110213366066,18.2426699363397,18.1730739187196,18.1022402518771,18.0301760543050,17.9568885960776,17.8823853001366,17.8066737436494,17.7297616594419,17.6516569375108,17.5723676266196,17.4919019359828,17.4102682370428,17.3274750653452,17.2435311225178,17.1584452783587,18.9304725560869,18.8736947131132,18.8156169835910,18.7562450668581,18.6955848056502,18.6336421868794,18.5704233424572,18.5059345501633,18.4401822345622,18.3731729679713,18.3049134714816,18.2354106160359,18.1646714235652,18.0927030681888,18.0195128774795,17.9451083337984,17.8694970757029,17.7926868994320,17.7146857604725,17.6355017752110,17.5551432226764,17.4736185463774,17.3909363562402,17.3071054306528,17.2221347186204,18.9904735636640,18.9337842203565,18.8757961731970,18.8165151618801,18.7559470709997,18.6940979308614,18.6309739183401,18.5665813577853,18.5009267219750,18.4340166331231,18.3658578639412,18.2964573387583,18.2258221347018,18.1539594829427,18.0808767700079,18.0065815391647,17.9310814918794,17.8543844893552,17.7764985541536,17.6974318719032,17.6171927931011,17.5357898350115,17.4532316836673,17.3695271959796,17.2846854019616,19.0490972553108,18.9925021689871,18.9346098921854,18.8754262060642,18.8149570382032,18.7532084634500,18.6901867048134,18.6258981344050,18.5603492744321,18.4935467982442,18.4254975314363,18.3562084530115,18.2856866966066,18.2139395517830,18.1409744653875,18.0667990429859,17.9914210503732,17.9148484151657,17.8370892284767,17.7581517466835,17.6780443932879,17.5967757608769,17.5143546131879,17.4307898872845,17.3460906958492,19.1063385325719,19.0498434371518,18.9920529928347,18.9329730232950,18.8726095001682,18.8109685439328,18.7480564248387,18.6838795638869,18.6184445338607,18.5517580604124,18.4838270232087,18.4146584571364,18.3442595535728,18.2726376617234,18.1998002900309,18.1257551076591,18.0505099460550,17.9740728005943,17.8964518323136,17.8176553697347,17.7376919107849,17.6565701248201,17.5742988547538,17.4908871192998,17.4063441153328,19.1621924247059,19.1058030307968,19.0481204553610,18.9891505655868,18.9288993781791,18.8673730602762,18.8045779304154,18.7405204595490,18.6752072721155,18.6086451471670,18.5408410195561,18.4718019811855,18.4015352823236,18.3300483329894,18.2573487044100,18.1834441305543,18.1083425097482,18.0320519063735,17.9545805526563,17.8759368505491,17.7961293737116,17.7151668695949,17.6330582616354,17.5498126515638,17.4654393218343};

const double act2_length[625] =  {19.1621924247059,19.1058030307968,19.0481204553610,18.9891505655868,18.9288993781791,18.8673730602762,18.8045779304154,18.7405204595490,18.6752072721155,18.6086451471670,18.5408410195561,18.4718019811855,18.4015352823236,18.3300483329894,18.2573487044100,18.1834441305543,18.1083425097482,18.0320519063735,17.9545805526563,17.8759368505491,17.7961293737116,17.7151668695949,17.6330582616354,17.5498126515638,17.4654393218343,19.1063385325719,19.0498434371518,18.9920529928347,18.9329730232950,18.8726095001682,18.8109685439328,18.7480564248387,18.6838795638869,18.6184445338607,18.5517580604124,18.4838270232087,18.4146584571364,18.3442595535728,18.2726376617234,18.1998002900309,18.1257551076591,18.0505099460550,17.9740728005943,17.8964518323136,17.8176553697347,17.7376919107849,17.6565701248201,17.5742988547538,17.4908871192998,17.4063441153328,19.0490972553108,18.9925021689871,18.9346098921854,18.8754262060642,18.8149570382032,18.7532084634500,18.6901867048134,18.6258981344050,18.5603492744321,18.4935467982442,18.4254975314363,18.3562084530115,18.2856866966066,18.2139395517830,18.1409744653875,18.0667990429859,17.9914210503732,17.9148484151657,17.8370892284767,17.7581517466835,17.6780443932879,17.5967757608769,17.5143546131879,17.4307898872845,17.3460906958492,18.9904735636640,18.9337842203565,18.8757961731970,18.8165151618801,18.7559470709997,18.6940979308614,18.6309739183401,18.5665813577853,18.5009267219750,18.4340166331231,18.3658578639412,18.2964573387583,18.2258221347018,18.1539594829427,18.0808767700079,18.0065815391647,17.9310814918794,17.8543844893552,17.7764985541536,17.6974318719032,17.6171927931011,17.5357898350115,17.4532316836673,17.3695271959796,17.2846854019616,18.9304725560869,18.8736947131132,18.8156169835910,18.7562450668581,18.6955848056502,18.6336421868794,18.5704233424572,18.5059345501633,18.4401822345622,18.3731729679713,18.3049134714816,18.2354106160359,18.1646714235652,18.0927030681888,18.0195128774795,17.9451083337984,17.8694970757029,17.7926868994320,17.7146857604725,17.6355017752110,17.5551432226764,17.4736185463774,17.3909363562402,17.3071054306528,17.2221347186204,18.8690994589776,18.8122388971536,18.7540775992872,18.6946212255226,18.6338755779228,18.5718466012166,18.5085403835861,18.4439631575008,18.3781213005969,18.3110213366066,18.2426699363397,18.1730739187196,18.1022402518771,18.0301760543050,17.9568885960776,17.8823853001366,17.8066737436494,17.7297616594419,17.6516569375108,17.5723676266196,17.4919019359828,17.4102682370428,17.3274750653452,17.2435311225178,17.1584452783587,18.8063596269257,18.7494221506807,18.6911834246839,18.6316490711057,18.5708248525823,18.5087166729307,18.4453305779032,18.3806727559858,18.3147495392424,18.2475674042058,18.1791329728205,18.1094530134381,18.0385344418689,17.9663843224925,17.8930098694318,17.8184184477915,17.7426175749672,17.6656149220270,17.5874183151712,17.5080357372725,17.4274753295031,17.3457453930525,17.2628543909410,17.1788109499341,17.0936238625647,18.7422585429805,18.6852499804881,18.6269399929600,18.5673341658704,18.5064382237353,18.4442580307949,18.3807995917366,18.3160690524592,18.2500727008817,18.1828169677984,18.1143084277829,18.0445538001440,17.9735599499364,17.9013338890287,17.8278827772321,17.7532139234936,17.6773347871564,17.6002529792917,17.5219762641066,17.4425125604304,17.3618699432854,17.2800566455468,17.1970810596954,17.1129517396696,17.0276774028220,18.6768018189412,18.6197280222671,18.5613529664006,18.5016822014575,18.4407214152007,18.3784764336938,18.3149532219912,18.2501578848706,18.1840966676072,18.1167759567932,18.0482022812049,17.9783823127206,17.9073228672910,17.8350309059653,17.7615135359774,17.6867780118936,17.6108317368264,17.5336822637179,17.4553372966969,17.3758046925128,17.2950924620520,17.2132087719406,17.1301619462386,17.0459604682304,16.9606129823176,18.6099951956705,18.5528620409368,18.4944281367476,18.4346989992574,18.3736802809072,18.3113777710484,18.2477973966037,18.1829452227665,18.1168274537432,18.0494504335380,17.9808206467848,17.9109447196271,17.8398294206506,17.7674816618690,17.6939084997679,17.6191171364096,17.5431149206015,17.4659093491324,17.3875080680805,17.3079188741968,17.2271497163684,17.1452086971662,17.0621040744818,16.9778442632588,16.8924378373233,18.5418445434320,18.4846579310007,18.4261714255764,18.3663905108112,18.3053208053189,18.2429680632711,18.1793381750282,18.1144371678094,18.0482712064028,17.9808465939174,17.9121697725806,17.8422473245832,17.7710859729738,17.6986925826066,17.6250741611452,17.5502378601252,17.4741909760795,17.3969409517288,17.3184953772432,17.2388619915758,17.1580486838756,17.0760634949820,16.9929146190063,16.9086104050059,16.8231593587548,18.4723558622544,18.4151217169295,18.3565888847006,18.2967628182392,18.2356491038924,18.1732534622514,18.1095817487557,18.0446399543335,17.9784342060818,17.9109707679871,17.8422560416902,17.7722965672971,17.7010990242377,17.6286702321772,17.5550171519813,17.4801468867386,17.4040666828441,17.3267839311475,17.2483061681682,17.1686410773831,17.0877964905903,17.0057803893525,16.9226009065262,16.8382663278802,16.7527850938096,18.4015352823236,18.3442595535728,18.2856866966066,18.2258221347018,18.1646714235652,18.1022402518771,18.0385344418689,17.9735599499364,17.9073228672910,17.8398294206506,17.7710859729738,17.7010990242377,17.6298752122640,17.5574213135947,17.4837442444208,17.4088510615673,17.3327489635366,17.2554452916159,17.1769475310494,17.0972633122816,17.0164004122739,16.9343667559008,16.8511704174278,16.7668196220779,16.6813227476911,18.3293890644038,18.2720777266022,18.2134711749207,18.1535748048924,18.0923941432788,18.0299348485893,17.9662027116338,17.9012036561105,17.8349437392300,17.7674291523784,17.6986662218220,17.6286614094553,17.5574213135947,17.4849526698218,17.4112623518774,17.3363573726111,17.2602448849873,17.1829321831536,17.1044267035729,17.0247360262246,16.9438678758776,16.8618301234402,16.7786307873916,16.6942780352979,16.6087801854208,18.2559236002911,18.1985826529860,18.1399487649083,18.0800273055658,18.0188237745388,17.9563438019776,17.8925931491322,17.8275777089159,17.7613035065043,17.6937766999725,17.6250035809723,17.5549905754520,17.4837442444208,17.4112712847609,17.3375785300899,17.2626729516765,17.1865616594126,17.1092519028447,17.0307510722686,16.9510666998915,16.8702064610638,16.7881781755868,16.7049898090988,16.6206494745467,16.5351654337448,18.1811454132996,18.1237808814989,18.0651260440108,18.0051862461040,17.9439669620127,17.8814737954137,17.8177124799351,17.7526888796971,17.6864089898887,17.6188789373802,17.5501049813756,17.4800935141060,17.4088510615673,17.3363842843032,17.2626999782390,17.1878050755655,17.1117066456795,17.0344118961821,16.9559281739381,16.8762629662018,16.7954239018118,16.7134187524583,16.6302554340291,16.5459420080378,16.4604866831386,18.1050611587844,18.0476790932689,17.9890097224192,17.9290583691210,17.8678304841697,17.8053316467294,17.7415675648218,17.6765440758472,17.6102671471398,17.5427428765586,17.4739774931167,17.4039773576515,17.3327489635366,17.2602989374401,17.1866340401305,17.1117611673334,17.0356873506424,16.9584197584869,16.8799656971602,16.8003326119119,16.7195280881084,16.6375598524646,16.5544357743524,16.4701638671897,16.3847522899152,18.0276776247014,17.9702841023629,17.9116066436891,17.8516505511100,17.7904212539637,17.7279243089388,17.6641654005460,17.5991503416206,17.5328850738598,17.4653756683933,17.3966283263926,17.3266493797194,17.2554452916159,17.1830226574399,17.1093882054463,17.0345487976189,16.9585114305554,16.8812832364075,16.8028714838812,16.7232835792995,16.6425270677315,16.5606096341932,16.4775391049215,16.3933234487291,16.3079707784427,17.9490017322079,17.8916028564139,17.8329237853980,17.7729698031350,17.7117463195628,17.6492588710099,17.5855131206520,17.5205148589994,17.4542700044162,17.3867846036753,17.3180648325493,17.2481169964400,17.1769475310494,17.1045630030948,17.0309701110690,16.9561756860505,16.8801866925651,16.8030102295027,16.7246535310925,16.6451239679400,16.5644290481293,16.4825764183955,16.3995738653697,16.3154293169038,16.2301508434762,17.8690405363068,17.8116424372926,17.7529682598488,17.6930232715699,17.6318128651277,17.5693425586861,17.5056179963451,17.4406449486142,17.3744293129184,17.3069771141381,17.2382945051845,17.1683877676137,17.0972633122816,17.0249276800407,16.9513875424836,16.8766497027337,16.8007210962880,16.7236087919134,16.6453199926008,16.5658620365805,16.4852423984015,16.4034686900798,16.3205486623195,16.2364902058111,16.1513013526105,17.7878012265348,17.7304100618260,17.6717473148216,17.6118182388876,17.5506282116425,17.4881827353631,17.4244874374169,17.3595480707253,17.2933705142577,17.2259607735596,17.1573249813157,17.0874693979515,17.0164004122739,16.9441245421549,16.8706484352597,16.7959788698235,16.7201227554772,16.6430871341282,16.5648791808972,16.4855062051158,16.4049756513873,16.3232951007160,16.2404722717079,16.1565150218485,16.0714313488601,17.7052911277006,17.6479130825654,17.5892683343771,17.5293621245024,17.4681998178010,17.4057869030228,17.3421289932328,17.2772318262656,17.2111012652108,17.1437432989323,17.0751640426220,17.0053697383910,16.9343667559008,16.8621615930359,16.7887608766213,16.7141713631872,16.6383999397833,16.5614536248474,16.4833395691288,16.4040650566727,16.3236375058673,16.2420644705584,16.1593536412354,16.0755128462929,15.9905500533725,17.6215177006736,17.5641589886083,17.5055388397144,17.4456624856697,17.3845352809514,17.3221627032285,17.2585503537812,17.1937039579497,17.1276293656139,17.0603325517063,16.9918196167595,16.9220967874912,16.8511704174278,16.7790469875707,16.7057331071061,16.6312355141622,16.5555610766158,16.4787167929520,16.4007097931802,16.3215473398087,16.2412368288834,16.1597857910929,16.0772018929441,15.9934929380143,15.9086668682824,17.5364885432274,17.4791554064752,17.4205664900876,17.3607270184451,17.2996423381037,17.2373179181846,17.1737593507912,17.1089723514544,17.0429627596101,16.9757365391085,16.9072997787591,16.8376586929117,16.7668196220779,16.6947890335928,16.6215735223221,16.5471798114152,16.4716147531088,16.3948853295823,16.3169986538696,16.2379619708309,16.1577826581859,16.0764682276156,15.9940263259335,15.9104647363330,15.8257913797142,17.4502113909422,17.3929101010481,17.3343590837835,17.2745635587076,17.2135288670030,17.1512604718657,17.0877639589217,17.0230450366727,16.9571095369738,16.8899634155433,16.8216127525069,16.7520637529807,16.6813227476911,16.6093961936388,16.5362906748053,16.4620129029071,16.3865697181995,16.3099680903334,16.2322151192678,16.1533180362423,16.0732842048119,15.9921211219496,15.9098364192197,15.8264378640260,15.7419333609409};

const double z_sections[26] = {0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625};

double find_z_section(int y_int_upper, int y_int_lower){
    
    double middle_value = (double)((y_int_upper+y_int_lower)/2);
    int low_index = 0;
    int high_index = 1;
    
    while(middle_value > z_sections[low_index]){
        
        if((middle_value>z_sections[low_index])&&(middle_value<z_sections[high_index])){
            break;
        }
        else
        low_index  += 1;
        high_index += 1;
    }
    
    return z_sections[low_index];
}

int main(int argc, const char * argv[]) {
//-----------------------------------------------------------------------------------------------
    // user define TV desire in neutral frame
    double current_Tv[3], desire_y_int, desire_z_int;
    
    cout << "enter desired TV in neutral frame (x y z component)\n";
    cin  >> current_Tv[0] >> current_Tv[1] >> current_Tv[2];
    normalization(current_Tv);
    // generate y and z interception base on Dakota's calcution
    desire_y_int = current_Tv[1]/current_Tv[0];
    desire_z_int = current_Tv[2]/current_Tv[0];
    
    
//-----------------------------------------------------------------------------------------------
    //find the min and max for each array avaliable
    
    double  min_y_int = *min_element(y_int, y_int + sizeof(y_int)/sizeof(y_int[0]));
    double  max_y_int = *max_element(y_int, y_int + sizeof(y_int)/sizeof(y_int[0]));
    
    double  min_z_int = *min_element(z_int, z_int + sizeof(z_int)/sizeof(z_int[0]));
    double  max_z_int = *max_element(z_int, z_int + sizeof(z_int)/sizeof(z_int[0]));

    double  min_act1_length = *min_element(act1_length, act1_length + sizeof(act1_length)/sizeof(act1_length[0]));
    double  max_act1_lenght = *max_element(act1_length, act1_length + sizeof(act1_length)/sizeof(act1_length[0]));
    
    double  min_act2_length = *min_element(act2_length, act2_length + sizeof(act2_length)/sizeof(act2_length[0]));
    double  max_act2_length = *max_element(act2_length, act2_length + sizeof(act2_length)/sizeof(act2_length[0]));
    
    printf("the min and max of y_int is %f,%f\n",min_y_int,max_y_int);
    printf("the min and max of z_int is %f,%f\n",min_z_int,max_z_int);
    printf("the min and max actuator1_length is %f,%f\n",min_act1_length,max_act1_lenght);
    printf("the min and max of actuator2_length is %f,%f\n",min_act2_length,max_act2_length);


//-----------------------------------------------------------------------------------------------

    // record starting time
    time1 = (double)clock()/CLOCKS_PER_SEC;

    // calculate run time by taking difference between current and starting time
    
    
//    printf("the value of y_int is %f\n",y_int[1]);
//    printf("the value of z_int is %f\n",z_int[1]);
//    printf("the value of actuator 1 length and actuator 2 lenght is the following %f\n,%f\n",
//           act1_length[1],act2_length[1]);
    
    // from matlab table we can see y intercept steps up every 12
    int loop_count_y = 0;
    int loop_count_z = 0;
    int y_int_lower_index = 0;
    int y_int_upper_index = 25;
    int z_int_lower_index = 0;
    int z_int_upper_index = 0;
    
// -----------------------------------------------------------------------------------------------
    
    // this section loop searches for the section of y-int and records its lower and upper index value
    while (desire_y_int >= y_int[y_int_lower_index]){
        
//        printf("testtttt %d \n ", z_int_lower_index);
       
        //-----------------------------------------------------------------------------------------------
        // when we are below middle section
        //-----------------------------------------------------------------------------------------------
        if(loop_count_y < 13){
            
            if((desire_y_int>=y_int[y_int_lower_index]) && (desire_y_int<y_int[y_int_upper_index])){
                
                //            double test_var = abs(desire_y_int-y_int[y_int_upper_index]);
                z_int_lower_index = (int)(find_z_section(y_int_upper_index, y_int_lower_index));
                z_int_upper_index = z_int_lower_index + 1;
                //            printf("abs(desire_y_int-y_int[y_int_upper_index]) = %f \n", test_var);
                printf("we are below 92\n");
                
                break;
                
                
            }
        }
        //-----------------------------------------------------------------------------------------------
        // when we are above middle section
        //-----------------------------------------------------------------------------------------------
        if(loop_count_y > 13){
            
            if((desire_y_int>=y_int[y_int_lower_index]) && (desire_y_int<y_int[y_int_upper_index])){
                
                y_int_lower_index += 25;
                y_int_upper_index += 25;
                z_int_lower_index = (int)(find_z_section(y_int_upper_index, y_int_lower_index));
                z_int_upper_index = z_int_lower_index + 1;
                //            printf("abs(desire_y_int-y_int[y_int_upper_index]) = %f \n", test_var);
                printf("we are above 92\n");
                
                break;
                
            }
            
        }
        //-----------------------------------------------------------------------------------------------
        // special case : when we are at middle section
        //-----------------------------------------------------------------------------------------------
        if (loop_count_y == 13){
            double small_deviation = 0.001;
            if(((y_int[y_int_upper_index]-small_deviation)<desire_y_int)&& (y_int[y_int_upper_index]+small_deviation)>desire_y_int){
                y_int_lower_index += 25;
                y_int_upper_index += 25;
                z_int_lower_index = (int)(find_z_section(y_int_upper_index, y_int_lower_index));
                z_int_upper_index = z_int_lower_index + 1;
                //            printf("abs(desire_y_int-y_int[y_int_upper_index]) = %f \n", test_var);
                printf("we are above 92\n");
                
                break;
            }
            
            if(((y_int[y_int_lower_index]-small_deviation)<desire_y_int)&& (y_int[y_int_lower_index]+small_deviation)>desire_y_int){
                
                z_int_lower_index = (int)(find_z_section(y_int_upper_index, y_int_lower_index));
                z_int_upper_index = z_int_lower_index + 1;
                printf("we are below 92\n");
                
                break;
            }
        }
        
        y_int_lower_index += 25;
        y_int_upper_index += 25;
        ++loop_count_y;
        printf("from %d to %d and loop count is %d \n",y_int_lower_index,y_int_upper_index,loop_count_y);
        
    }
//----------------------------------128-------------------------------------------------------------
    
    // this section uses the recorded lower and uppder index to search for z-int
    
    while (desire_z_int < z_int[z_int_lower_index]){
        
        if(desire_z_int > z_int[z_int_lower_index+1]){
            printf("not suppose to run this part\n");
            break;
        }
        
        ++z_int_lower_index;
        ++z_int_upper_index;
        ++loop_count_z;
    }
//-----------------------------------------------------------------------------------------------
    
    // interpolation section, now we know the corresponding ranges, we interpolate to get the right actuator lengths for 1 and 2
    
    double act1_position, act2_position;
    
    act1_position = (act1_length[z_int_upper_index] - act1_length[z_int_lower_index])/2+  act1_length[z_int_lower_index];
    act2_position = (act2_length[z_int_upper_index] - act2_length[z_int_lower_index])/2+  act2_length[z_int_lower_index];
    
    timedif = (((double) clock()) / CLOCKS_PER_SEC) - time1;
//-----------------------------------------------------------------------------------------------
    
    //printing seciton, testbench for results
    
    //-----------------------------------------------------------------------------------------------
        // print section for vector -> x-y interception
    printf("current normalized array is %f, %f, %f\n",current_Tv[0],current_Tv[1],current_Tv[2]);
    //-----------------------------------------------------------------------------------------------
        // print section for actuator length look up using y and z interception
    printf("our desire y_int and z_int is %f and %f\n",desire_y_int,desire_z_int);
    printf("our current section is between %d and %d and our loop count is %d \n", y_int_lower_index, y_int_upper_index,loop_count_y);
    printf("lower y_int is %f and upper y_int is %f\n",y_int[y_int_lower_index],y_int[y_int_upper_index]);
    printf("z_int_lower_index, and z_int_upper_index is %d and %d and loop count is %d \n",z_int_lower_index, z_int_upper_index,loop_count_z);
    printf("lower z_int is %f and upper z_int is %f \n",z_int[z_int_lower_index],z_int[z_int_upper_index]);
    printf("resulting lenght of actuator 1 is %f\n with lower and upper values of %f,%f\n",act1_position,act1_length[z_int_lower_index],act1_length[z_int_upper_index]);
    printf("resulting lenght of actuator 2 is %f\n with lower and upper values of %f,%f\n",act2_position,act2_length[z_int_lower_index],act2_length[z_int_upper_index]);

    //print time difference
    printf("run time is %f with clocks persec as %lu\n", timedif,CLOCKS_PER_SEC);
    
    
    printf("smallest and biggest value of act1 is %f and %f\n", min_act1_length,max_act1_lenght);
    printf("smallest and biggest value of act2 is %f and %f\n", min_act2_length,max_act2_length);
//    printf("%f \n",act2_length[13]);
//    printf("%f \n",act1_length[13]);
    
//    printf("test %f\n", find_z_section(77, 78));
//    printf("%d\n ",z_int_lower_index);
    
    // the following code is Enson's attempt to implement a search function
    return 0;
    
}

//-----------------------------------------------------------------------------------------------
    // returns a specific vector within desired TV
//0.9686, -0.2068, 0.1045



